[0.000000] (-) TimerEvent: {}
[0.000471] (-) JobUnselected: {'identifier': 'franka_bringup'}
[0.000537] (-) JobUnselected: {'identifier': 'franka_description'}
[0.000673] (-) JobUnselected: {'identifier': 'franka_example_controllers'}
[0.000774] (-) JobUnselected: {'identifier': 'franka_gripper'}
[0.000826] (-) JobUnselected: {'identifier': 'franka_hardware'}
[0.000861] (-) JobUnselected: {'identifier': 'franka_moveit_config'}
[0.000965] (-) JobUnselected: {'identifier': 'franka_msgs'}
[0.001007] (-) JobUnselected: {'identifier': 'franka_robot_state_broadcaster'}
[0.001066] (-) JobUnselected: {'identifier': 'franka_semantic_components'}
[0.001144] (-) JobUnselected: {'identifier': 'integration_launch_testing'}
[0.001183] (-) JobUnselected: {'identifier': 'joint_trajectory_controller'}
[0.001278] (-) JobUnselected: {'identifier': 'messages_fr3'}
[0.001335] (cartesian_impedance_control) JobQueued: {'identifier': 'cartesian_impedance_control', 'dependencies': OrderedDict([('franka_description', '/home/simi/franka_ros2_ws/install/franka_description'), ('franka_msgs', '/home/simi/franka_ros2_ws/install/franka_msgs'), ('messages_fr3', '/home/simi/franka_ros2_ws/install/messages_fr3'), ('franka_hardware', '/home/simi/franka_ros2_ws/install/franka_hardware'), ('franka_semantic_components', '/home/simi/franka_ros2_ws/install/franka_semantic_components'), ('franka_robot_state_broadcaster', '/home/simi/franka_ros2_ws/install/franka_robot_state_broadcaster')])}
[0.001403] (cartesian_impedance_control) JobStarted: {'identifier': 'cartesian_impedance_control'}
[0.037587] (cartesian_impedance_control) JobProgress: {'identifier': 'cartesian_impedance_control', 'progress': 'cmake'}
[0.038530] (cartesian_impedance_control) JobProgress: {'identifier': 'cartesian_impedance_control', 'progress': 'build'}
[0.039339] (cartesian_impedance_control) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/simi/franka_ros2_ws/build/cartesian_impedance_control', '--', '-j16', '-l16'], 'cwd': '/home/simi/franka_ros2_ws/build/cartesian_impedance_control', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'simi'), ('LC_TIME', 'de_CH.UTF-8'), ('XDG_SESSION_TYPE', 'wayland'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/home/simi/franka_ros2_ws/install/franka_robot_state_broadcaster/lib:/home/simi/franka_ros2_ws/install/franka_semantic_components/lib:/home/simi/franka_ros2_ws/install/franka_hardware/lib:/home/simi/franka_ros2_ws/install/messages_fr3/lib:/home/simi/franka_ros2_ws/install/franka_msgs/lib:/home/simi/franka_ros2_ws/install/cartesian_impedance_control/lib:/home/simi/franka_ros2_ws/install/joint_trajectory_controller/lib:/home/simi/franka_ros2_ws/install/integration_launch_testing/lib:/home/simi/franka_ros2_ws/install/franka_example_controllers/lib:/home/simi/franka_ros2_ws/install/franka_gripper/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('HOME', '/home/simi'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('LC_MONETARY', 'de_CH.UTF-8'), ('SYSTEMD_EXEC_PID', '21799'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('IM_CONFIG_PHASE', '1'), ('WAYLAND_DISPLAY', 'wayland-0'), ('COLCON_PREFIX_PATH', '/home/simi/franka_ros2_ws/install'), ('ROS_DISTRO', 'humble'), ('LOGNAME', 'simi'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'simi'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('PATH', '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin'), ('SESSION_MANAGER', 'local/simi-IdeaPad-Flex-5-14ALC05:@/tmp/.ICE-unix/1757,unix/simi-IdeaPad-Flex-5-14ALC05:/tmp/.ICE-unix/1757'), ('XDG_MENU_PREFIX', 'gnome-'), ('LC_ADDRESS', 'de_CH.UTF-8'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/c2c349f2_07b2_4787_befd_04c8fdaae93b'), ('GNOME_SETUP_DISPLAY', ':1'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('LC_TELEPHONE', 'de_CH.UTF-8'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/.mutter-Xwaylandauth.LXAIO2'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.381'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/home/simi/franka_ros2_ws/install/cartesian_impedance_control:/home/simi/franka_ros2_ws/install/messages_fr3:/home/simi/franka_ros2_ws/install/joint_trajectory_controller:/home/simi/franka_ros2_ws/install/integration_launch_testing:/home/simi/franka_ros2_ws/install/franka_bringup:/home/simi/franka_ros2_ws/install/franka_robot_state_broadcaster:/home/simi/franka_ros2_ws/install/franka_example_controllers:/home/simi/franka_ros2_ws/install/franka_semantic_components:/home/simi/franka_ros2_ws/install/franka_moveit_config:/home/simi/franka_ros2_ws/install/franka_hardware:/home/simi/franka_ros2_ws/install/franka_gripper:/home/simi/franka_ros2_ws/install/franka_msgs:/home/simi/franka_ros2_ws/install/franka_description:/opt/ros/humble'), ('SHELL', '/bin/bash'), ('LC_NAME', 'de_CH.UTF-8'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('LC_MEASUREMENT', 'de_CH.UTF-8'), ('LC_IDENTIFICATION', 'de_CH.UTF-8'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/simi/franka_ros2_ws/build/cartesian_impedance_control'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/home/simi/franka_ros2_ws/install/messages_fr3/local/lib/python3.10/dist-packages:/home/simi/franka_ros2_ws/install/franka_gripper/local/lib/python3.10/dist-packages:/home/simi/franka_ros2_ws/install/franka_msgs/local/lib/python3.10/dist-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('LC_NUMERIC', 'de_CH.UTF-8'), ('LC_PAPER', 'de_CH.UTF-8'), ('COLCON', '1'), ('VTE_VERSION', '6800'), ('CMAKE_PREFIX_PATH', '/home/simi/franka_ros2_ws/install/franka_robot_state_broadcaster:/home/simi/franka_ros2_ws/install/franka_semantic_components:/home/simi/franka_ros2_ws/install/franka_hardware:/home/simi/franka_ros2_ws/install/messages_fr3:/home/simi/franka_ros2_ws/install/franka_msgs:/home/simi/franka_ros2_ws/install/franka_description:/home/simi/franka_ros2_ws/install/cartesian_impedance_control:/home/simi/franka_ros2_ws/install/joint_trajectory_controller:/home/simi/franka_ros2_ws/install/integration_launch_testing:/home/simi/franka_ros2_ws/install/franka_bringup:/home/simi/franka_ros2_ws/install/franka_example_controllers:/home/simi/franka_ros2_ws/install/franka_moveit_config:/home/simi/franka_ros2_ws/install/franka_gripper:/opt/ros/humble')]), 'shell': False}
[0.099606] (-) TimerEvent: {}
[0.108754] (cartesian_impedance_control) StdoutLine: {'line': b'\x1b[35m\x1b[1mConsolidate compiler generated dependencies of target cartesian_impedance_control\x1b[0m\n'}
[0.165847] (cartesian_impedance_control) StdoutLine: {'line': b'[ 25%] \x1b[32mBuilding CXX object CMakeFiles/cartesian_impedance_control.dir/src/user_input_server.cpp.o\x1b[0m\n'}
[0.166202] (cartesian_impedance_control) StdoutLine: {'line': b'[ 25%] \x1b[32mBuilding CXX object CMakeFiles/cartesian_impedance_control.dir/src/cartesian_impedance_controller.cpp.o\x1b[0m\n'}
[0.199759] (-) TimerEvent: {}
[0.300169] (-) TimerEvent: {}
[0.400610] (-) TimerEvent: {}
[0.501030] (-) TimerEvent: {}
[0.601524] (-) TimerEvent: {}
[0.701951] (-) TimerEvent: {}
[0.802404] (-) TimerEvent: {}
[0.902849] (-) TimerEvent: {}
[1.003300] (-) TimerEvent: {}
[1.103754] (-) TimerEvent: {}
[1.204208] (-) TimerEvent: {}
[1.304664] (-) TimerEvent: {}
[1.405131] (-) TimerEvent: {}
[1.505632] (-) TimerEvent: {}
[1.606059] (-) TimerEvent: {}
[1.706555] (-) TimerEvent: {}
[1.806968] (-) TimerEvent: {}
[1.907432] (-) TimerEvent: {}
[2.007860] (-) TimerEvent: {}
[2.108339] (-) TimerEvent: {}
[2.208790] (-) TimerEvent: {}
[2.309328] (-) TimerEvent: {}
[2.409746] (-) TimerEvent: {}
[2.510405] (-) TimerEvent: {}
[2.610868] (-) TimerEvent: {}
[2.711350] (-) TimerEvent: {}
[2.811823] (-) TimerEvent: {}
[2.912377] (-) TimerEvent: {}
[3.012845] (-) TimerEvent: {}
[3.113355] (-) TimerEvent: {}
[3.213832] (-) TimerEvent: {}
[3.314290] (-) TimerEvent: {}
[3.414807] (-) TimerEvent: {}
[3.515287] (-) TimerEvent: {}
[3.615768] (-) TimerEvent: {}
[3.716241] (-) TimerEvent: {}
[3.816739] (-) TimerEvent: {}
[3.917269] (-) TimerEvent: {}
[4.017715] (-) TimerEvent: {}
[4.118158] (-) TimerEvent: {}
[4.218659] (-) TimerEvent: {}
[4.319094] (-) TimerEvent: {}
[4.419543] (-) TimerEvent: {}
[4.519934] (-) TimerEvent: {}
[4.620411] (-) TimerEvent: {}
[4.720885] (-) TimerEvent: {}
[4.821373] (-) TimerEvent: {}
[4.921807] (-) TimerEvent: {}
[5.022242] (-) TimerEvent: {}
[5.122681] (-) TimerEvent: {}
[5.223138] (-) TimerEvent: {}
[5.244515] (cartesian_impedance_control) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/eigen3/Eigen/Core:85\x1b[m\x1b[K,\n'}
[5.244852] (cartesian_impedance_control) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/eigen3/Eigen/Dense:1\x1b[m\x1b[K,\n'}
[5.244991] (cartesian_impedance_control) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/eigen3/Eigen/Eigen:1\x1b[m\x1b[K,\n'}
[5.245119] (cartesian_impedance_control) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/simi/franka_ros2_ws/src/cartesian_impedance_control/include/cartesian_impedance_control/user_input_server.hpp:3\x1b[m\x1b[K,\n'}
[5.245307] (cartesian_impedance_control) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/simi/franka_ros2_ws/src/cartesian_impedance_control/include/cartesian_impedance_control/cartesian_impedance_controller.hpp:29\x1b[m\x1b[K,\n'}
[5.245446] (cartesian_impedance_control) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/simi/franka_ros2_ws/src/cartesian_impedance_control/src/cartesian_impedance_controller.cpp:15\x1b[m\x1b[K:\n'}
[5.245576] (cartesian_impedance_control) StderrLine: {'line': b'/usr/include/c++/11/functional: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kstruct std::_Bind_check_arity<void (cartesian_impedance_control::CartesianImpedanceController::*)(std::shared_ptr<franka_msgs::msg::FrankaRobotState_<std::allocator<void> > >, const Eigen::Matrix<double, -1, -1>&), cartesian_impedance_control::CartesianImpedanceController*, const std::_Placeholder<1>&>\x1b[m\x1b[K\xe2\x80\x99:\n'}
[5.245710] (cartesian_impedance_control) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/functional:768:12:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstruct std::_Bind_helper<false, void (cartesian_impedance_control::CartesianImpedanceController::*)(std::shared_ptr<franka_msgs::msg::FrankaRobotState_<std::allocator<void> > >, const Eigen::Matrix<double, -1, -1>&), cartesian_impedance_control::CartesianImpedanceController*, const std::_Placeholder<1>&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.245867] (cartesian_impedance_control) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/functional:789:5:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Func, class ... _BoundArgs> typename std::_Bind_helper<std::__is_socketlike<_Func>::value, _Func, _BoundArgs ...>::type std::bind(_Func&&, _BoundArgs&& ...) [with _Func = void (cartesian_impedance_control::CartesianImpedanceController::*)(std::shared_ptr<franka_msgs::msg::FrankaRobotState_<std::allocator<void> > >, const Eigen::Matrix<double, -1, -1>&); _BoundArgs = {cartesian_impedance_control::CartesianImpedanceController*, const std::_Placeholder<1>&}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.246025] (cartesian_impedance_control) StderrLine: {'line': b'\x1b[01m\x1b[K/home/simi/franka_ros2_ws/src/cartesian_impedance_control/src/cartesian_impedance_controller.cpp:219:14:\x1b[m\x1b[K   required from here\n'}
[5.246156] (cartesian_impedance_control) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/functional:756:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kstatic assertion failed: Wrong number of arguments for pointer-to-member\n'}
[5.246284] (cartesian_impedance_control) StderrLine: {'line': b'  755 |       static_assert(_Varargs::\x1b[01;31m\x1b[Kvalue\x1b[m\x1b[K\n'}
[5.246411] (cartesian_impedance_control) StderrLine: {'line': b'      |                               \x1b[01;31m\x1b[K~~~~~\x1b[m\x1b[K\n'}
[5.246536] (cartesian_impedance_control) StderrLine: {'line': b'  756 | \x1b[01;31m\x1b[K                    ? sizeof...(_BoundArgs) >= _Arity::value + 1\x1b[m\x1b[K\n'}
[5.246618] (cartesian_impedance_control) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.246685] (cartesian_impedance_control) StderrLine: {'line': b'  757 | \x1b[01;31m\x1b[K                    : sizeof...(_BoundArgs) == _Arity::value + 1\x1b[m\x1b[K,\n'}
[5.246750] (cartesian_impedance_control) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.246816] (cartesian_impedance_control) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/functional:756:21:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[K(false ? (2 >= (((long unsigned int)std::integral_constant<long unsigned int, 2>::value) + 1)) : (2 == (((long unsigned int)std::integral_constant<long unsigned int, 2>::value) + 1)))\x1b[m\x1b[K\xe2\x80\x99 evaluates to false\n'}
[5.323343] (-) TimerEvent: {}
[5.423858] (-) TimerEvent: {}
[5.524325] (-) TimerEvent: {}
[5.624797] (-) TimerEvent: {}
[5.725299] (-) TimerEvent: {}
[5.825916] (-) TimerEvent: {}
[5.926383] (-) TimerEvent: {}
[6.026855] (-) TimerEvent: {}
[6.127325] (-) TimerEvent: {}
[6.227823] (-) TimerEvent: {}
[6.328278] (-) TimerEvent: {}
[6.428765] (-) TimerEvent: {}
[6.529310] (-) TimerEvent: {}
[6.629756] (-) TimerEvent: {}
[6.730203] (-) TimerEvent: {}
[6.830677] (-) TimerEvent: {}
[6.931138] (-) TimerEvent: {}
[7.031603] (-) TimerEvent: {}
[7.132081] (-) TimerEvent: {}
[7.232557] (-) TimerEvent: {}
[7.333033] (-) TimerEvent: {}
[7.433542] (-) TimerEvent: {}
[7.533971] (-) TimerEvent: {}
[7.634408] (-) TimerEvent: {}
[7.734825] (-) TimerEvent: {}
[7.835286] (-) TimerEvent: {}
[7.935747] (-) TimerEvent: {}
[8.036194] (-) TimerEvent: {}
[8.136907] (-) TimerEvent: {}
[8.237330] (-) TimerEvent: {}
[8.252221] (cartesian_impedance_control) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:32\x1b[m\x1b[K,\n'}
[8.253319] (cartesian_impedance_control) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29\x1b[m\x1b[K,\n'}
[8.253541] (cartesian_impedance_control) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[8.253672] (cartesian_impedance_control) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[8.253798] (cartesian_impedance_control) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[8.253921] (cartesian_impedance_control) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[8.254044] (cartesian_impedance_control) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[8.254196] (cartesian_impedance_control) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[8.254322] (cartesian_impedance_control) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[8.254446] (cartesian_impedance_control) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[8.254569] (cartesian_impedance_control) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/simi/franka_ros2_ws/src/cartesian_impedance_control/include/cartesian_impedance_control/user_input_server.hpp:6\x1b[m\x1b[K,\n'}
[8.254676] (cartesian_impedance_control) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/simi/franka_ros2_ws/src/cartesian_impedance_control/include/cartesian_impedance_control/cartesian_impedance_controller.hpp:29\x1b[m\x1b[K,\n'}
[8.254734] (cartesian_impedance_control) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/simi/franka_ros2_ws/src/cartesian_impedance_control/src/cartesian_impedance_controller.cpp:15\x1b[m\x1b[K:\n'}
[8.254792] (cartesian_impedance_control) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (cartesian_impedance_control::CartesianImpedanceController::*(cartesian_impedance_control::CartesianImpedanceController*, std::_Placeholder<1>))(std::shared_ptr<franka_msgs::msg::FrankaRobotState_<std::allocator<void> > >, const Eigen::Matrix<double, -1, -1>&)>; MessageT = franka_msgs::msg::FrankaRobotState_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.254855] (cartesian_impedance_control) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = franka_msgs::msg::FrankaRobotState_<std::allocator<void> >; CallbackT = std::_Bind<void (cartesian_impedance_control::CartesianImpedanceController::*(cartesian_impedance_control::CartesianImpedanceController*, std::_Placeholder<1>))(std::shared_ptr<franka_msgs::msg::FrankaRobotState_<std::allocator<void> > >, const Eigen::Matrix<double, -1, -1>&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<franka_msgs::msg::FrankaRobotState_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<franka_msgs::msg::FrankaRobotState_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = franka_msgs::msg::FrankaRobotState_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<franka_msgs::msg::FrankaRobotState_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.254939] (cartesian_impedance_control) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = franka_msgs::msg::FrankaRobotState_<std::allocator<void> >; CallbackT = std::_Bind<void (cartesian_impedance_control::CartesianImpedanceController::*(cartesian_impedance_control::CartesianImpedanceController*, std::_Placeholder<1>))(std::shared_ptr<franka_msgs::msg::FrankaRobotState_<std::allocator<void> > >, const Eigen::Matrix<double, -1, -1>&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<franka_msgs::msg::FrankaRobotState_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<franka_msgs::msg::FrankaRobotState_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp_lifecycle::LifecycleNode; NodeTopicsT = rclcpp_lifecycle::LifecycleNode; ROSMessageType = franka_msgs::msg::FrankaRobotState_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<franka_msgs::msg::FrankaRobotState_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.255021] (cartesian_impedance_control) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = franka_msgs::msg::FrankaRobotState_<std::allocator<void> >; CallbackT = std::_Bind<void (cartesian_impedance_control::CartesianImpedanceController::*(cartesian_impedance_control::CartesianImpedanceController*, std::_Placeholder<1>))(std::shared_ptr<franka_msgs::msg::FrankaRobotState_<std::allocator<void> > >, const Eigen::Matrix<double, -1, -1>&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<franka_msgs::msg::FrankaRobotState_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<franka_msgs::msg::FrankaRobotState_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp_lifecycle::LifecycleNode; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<franka_msgs::msg::FrankaRobotState_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.255102] (cartesian_impedance_control) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp_lifecycle/rclcpp_lifecycle/lifecycle_node_impl.hpp:76:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp_lifecycle::LifecycleNode::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = franka_msgs::msg::FrankaRobotState_<std::allocator<void> >; CallbackT = std::_Bind<void (cartesian_impedance_control::CartesianImpedanceController::*(cartesian_impedance_control::CartesianImpedanceController*, std::_Placeholder<1>))(std::shared_ptr<franka_msgs::msg::FrankaRobotState_<std::allocator<void> > >, const Eigen::Matrix<double, -1, -1>&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<franka_msgs::msg::FrankaRobotState_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<franka_msgs::msg::FrankaRobotState_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<franka_msgs::msg::FrankaRobotState_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.255183] (cartesian_impedance_control) StderrLine: {'line': b'\x1b[01m\x1b[K/home/simi/franka_ros2_ws/src/cartesian_impedance_control/src/cartesian_impedance_controller.cpp:217:98:\x1b[m\x1b[K   required from here\n'}
[8.255241] (cartesian_impedance_control) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<franka_msgs::msg::FrankaRobotState_<std::allocator<void> > >, const Eigen::Matrix<double, -1, -1>&)>::function(std::_Bind<void (cartesian_impedance_control::CartesianImpedanceController::*(cartesian_impedance_control::CartesianImpedanceController*, std::_Placeholder<1>))(std::shared_ptr<franka_msgs::msg::FrankaRobotState_<std::allocator<void> > >, const Eigen::Matrix<double, -1, -1>&)>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.255303] (cartesian_impedance_control) StderrLine: {'line': b'  394 |       callback_variant_ = \x1b[01;31m\x1b[Kstatic_cast<typename scbth::callback_type>(callback)\x1b[m\x1b[K;\n'}
[8.255361] (cartesian_impedance_control) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.255419] (cartesian_impedance_control) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/functional:59\x1b[m\x1b[K,\n'}
[8.255477] (cartesian_impedance_control) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/eigen3/Eigen/Core:85\x1b[m\x1b[K,\n'}
[8.255534] (cartesian_impedance_control) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/eigen3/Eigen/Dense:1\x1b[m\x1b[K,\n'}
[8.255594] (cartesian_impedance_control) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/eigen3/Eigen/Eigen:1\x1b[m\x1b[K,\n'}
[8.255653] (cartesian_impedance_control) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/simi/franka_ros2_ws/src/cartesian_impedance_control/include/cartesian_impedance_control/user_input_server.hpp:3\x1b[m\x1b[K,\n'}
[8.255712] (cartesian_impedance_control) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/simi/franka_ros2_ws/src/cartesian_impedance_control/include/cartesian_impedance_control/cartesian_impedance_controller.hpp:29\x1b[m\x1b[K,\n'}
[8.255782] (cartesian_impedance_control) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/simi/franka_ros2_ws/src/cartesian_impedance_control/src/cartesian_impedance_controller.cpp:15\x1b[m\x1b[K:\n'}
[8.255841] (cartesian_impedance_control) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:435:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Functor, class _Constraints> std::function<_Res(_ArgTypes ...)>::function(_Functor&&) [with _Functor = _Functor; _Constraints = _Constraints; _Res = void; _ArgTypes = {std::shared_ptr<franka_msgs::msg::FrankaRobotState_<std::allocator<void> > >, const Eigen::Matrix<double, -1, -1, 0, -1, -1>&}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.255914] (cartesian_impedance_control) StderrLine: {'line': b'  435 |         \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K(_Functor&& __f)\n'}
[8.255974] (cartesian_impedance_control) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[8.256032] (cartesian_impedance_control) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:435:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[8.256101] (cartesian_impedance_control) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/bits/move.h:57\x1b[m\x1b[K,\n'}
[8.256159] (cartesian_impedance_control) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/stl_pair.h:59\x1b[m\x1b[K,\n'}
[8.256218] (cartesian_impedance_control) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/utility:70\x1b[m\x1b[K,\n'}
[8.256275] (cartesian_impedance_control) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/array:38\x1b[m\x1b[K,\n'}
[8.256332] (cartesian_impedance_control) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/simi/franka_ros2_ws/src/cartesian_impedance_control/include/cartesian_impedance_control/cartesian_impedance_controller.hpp:17\x1b[m\x1b[K,\n'}
[8.256390] (cartesian_impedance_control) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/simi/franka_ros2_ws/src/cartesian_impedance_control/src/cartesian_impedance_controller.cpp:15\x1b[m\x1b[K:\n'}
[8.256448] (cartesian_impedance_control) StderrLine: {'line': b'/usr/include/c++/11/type_traits: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<bool _Cond, class _Tp> using __enable_if_t = typename std::enable_if::type [with bool _Cond = false; _Tp = void]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.256506] (cartesian_impedance_control) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:353:8:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Res, class ... _ArgTypes> template<class _Cond, class _Tp> using _Requires = std::__enable_if_t<_Cond::value, _Tp> [with _Cond = std::function<void(std::shared_ptr<franka_msgs::msg::FrankaRobotState_<std::allocator<void> > >, const Eigen::Matrix<double, -1, -1>&)>::_Callable<std::_Bind<void (cartesian_impedance_control::CartesianImpedanceController::*(cartesian_impedance_control::CartesianImpedanceController*, std::_Placeholder<1>))(std::shared_ptr<franka_msgs::msg::FrankaRobotState_<std::allocator<void> > >, const Eigen::Matrix<double, -1, -1>&)>&, std::_Bind<void (cartesian_impedance_control::CartesianImpedanceController::*(cartesian_impedance_control::CartesianImpedanceController*, std::_Placeholder<1>))(std::shared_ptr<franka_msgs::msg::FrankaRobotState_<std::allocator<void> > >, const Eigen::Matrix<double, -1, -1>&)>, std::__invoke_result<std::_Bind<void (cartesian_impedance_control::CartesianImpedanceController::*(cartesian_impedance_control::CartesianImpedanceController*, std::_Placeholder<1>))(std::shared_ptr<franka_msgs::msg::FrankaRobotState_<std::allocator<void> > >, const Eigen::Matrix<double, -1, -1>&)>&, std::shared_ptr<franka_msgs::msg::FrankaRobotState_<std::allocator<void> > >, const Eigen::Matrix<double, -1, -1, 0, -1, -1>&> >; _Tp = void; _Res = void; _ArgTypes = {std::shared_ptr<franka_msgs::msg::FrankaRobotState_<std::allocator<void> > >, const Eigen::Matrix<double, -1, -1, 0, -1, -1>&}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.256592] (cartesian_impedance_control) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:434:9:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (cartesian_impedance_control::CartesianImpedanceController::*(cartesian_impedance_control::CartesianImpedanceController*, std::_Placeholder<1>))(std::shared_ptr<franka_msgs::msg::FrankaRobotState_<std::allocator<void> > >, const Eigen::Matrix<double, -1, -1>&)>; MessageT = franka_msgs::msg::FrankaRobotState_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.256658] (cartesian_impedance_control) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = franka_msgs::msg::FrankaRobotState_<std::allocator<void> >; CallbackT = std::_Bind<void (cartesian_impedance_control::CartesianImpedanceController::*(cartesian_impedance_control::CartesianImpedanceController*, std::_Placeholder<1>))(std::shared_ptr<franka_msgs::msg::FrankaRobotState_<std::allocator<void> > >, const Eigen::Matrix<double, -1, -1>&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<franka_msgs::msg::FrankaRobotState_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<franka_msgs::msg::FrankaRobotState_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = franka_msgs::msg::FrankaRobotState_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<franka_msgs::msg::FrankaRobotState_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.256750] (cartesian_impedance_control) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = franka_msgs::msg::FrankaRobotState_<std::allocator<void> >; CallbackT = std::_Bind<void (cartesian_impedance_control::CartesianImpedanceController::*(cartesian_impedance_control::CartesianImpedanceController*, std::_Placeholder<1>))(std::shared_ptr<franka_msgs::msg::FrankaRobotState_<std::allocator<void> > >, const Eigen::Matrix<double, -1, -1>&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<franka_msgs::msg::FrankaRobotState_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<franka_msgs::msg::FrankaRobotState_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp_lifecycle::LifecycleNode; NodeTopicsT = rclcpp_lifecycle::LifecycleNode; ROSMessageType = franka_msgs::msg::FrankaRobotState_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<franka_msgs::msg::FrankaRobotState_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.256830] (cartesian_impedance_control) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = franka_msgs::msg::FrankaRobotState_<std::allocator<void> >; CallbackT = std::_Bind<void (cartesian_impedance_control::CartesianImpedanceController::*(cartesian_impedance_control::CartesianImpedanceController*, std::_Placeholder<1>))(std::shared_ptr<franka_msgs::msg::FrankaRobotState_<std::allocator<void> > >, const Eigen::Matrix<double, -1, -1>&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<franka_msgs::msg::FrankaRobotState_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<franka_msgs::msg::FrankaRobotState_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp_lifecycle::LifecycleNode; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<franka_msgs::msg::FrankaRobotState_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.256910] (cartesian_impedance_control) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp_lifecycle/rclcpp_lifecycle/lifecycle_node_impl.hpp:76:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp_lifecycle::LifecycleNode::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = franka_msgs::msg::FrankaRobotState_<std::allocator<void> >; CallbackT = std::_Bind<void (cartesian_impedance_control::CartesianImpedanceController::*(cartesian_impedance_control::CartesianImpedanceController*, std::_Placeholder<1>))(std::shared_ptr<franka_msgs::msg::FrankaRobotState_<std::allocator<void> > >, const Eigen::Matrix<double, -1, -1>&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<franka_msgs::msg::FrankaRobotState_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<franka_msgs::msg::FrankaRobotState_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<franka_msgs::msg::FrankaRobotState_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.256998] (cartesian_impedance_control) StderrLine: {'line': b'\x1b[01m\x1b[K/home/simi/franka_ros2_ws/src/cartesian_impedance_control/src/cartesian_impedance_controller.cpp:217:98:\x1b[m\x1b[K   required from here\n'}
[8.257059] (cartesian_impedance_control) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/type_traits:2205:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.257120] (cartesian_impedance_control) StderrLine: {'line': b' 2205 |     using \x1b[01;31m\x1b[K__enable_if_t\x1b[m\x1b[K = typename enable_if<_Cond, _Tp>::type;\n'}
[8.257180] (cartesian_impedance_control) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.257285] (cartesian_impedance_control) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/functional:59\x1b[m\x1b[K,\n'}
[8.257350] (cartesian_impedance_control) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/eigen3/Eigen/Core:85\x1b[m\x1b[K,\n'}
[8.257409] (cartesian_impedance_control) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/eigen3/Eigen/Dense:1\x1b[m\x1b[K,\n'}
[8.257469] (cartesian_impedance_control) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/eigen3/Eigen/Eigen:1\x1b[m\x1b[K,\n'}
[8.257540] (cartesian_impedance_control) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/simi/franka_ros2_ws/src/cartesian_impedance_control/include/cartesian_impedance_control/user_input_server.hpp:3\x1b[m\x1b[K,\n'}
[8.257607] (cartesian_impedance_control) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/simi/franka_ros2_ws/src/cartesian_impedance_control/include/cartesian_impedance_control/cartesian_impedance_controller.hpp:29\x1b[m\x1b[K,\n'}
[8.257667] (cartesian_impedance_control) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/simi/franka_ros2_ws/src/cartesian_impedance_control/src/cartesian_impedance_controller.cpp:15\x1b[m\x1b[K:\n'}
[8.257728] (cartesian_impedance_control) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (cartesian_impedance_control::CartesianImpedanceController::*(cartesian_impedance_control::CartesianImpedanceController*, std::_Placeholder<1>))(std::shared_ptr<franka_msgs::msg::FrankaRobotState_<std::allocator<void> > >, const Eigen::Matrix<double, -1, -1>&)>; MessageT = franka_msgs::msg::FrankaRobotState_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.257809] (cartesian_impedance_control) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = franka_msgs::msg::FrankaRobotState_<std::allocator<void> >; CallbackT = std::_Bind<void (cartesian_impedance_control::CartesianImpedanceController::*(cartesian_impedance_control::CartesianImpedanceController*, std::_Placeholder<1>))(std::shared_ptr<franka_msgs::msg::FrankaRobotState_<std::allocator<void> > >, const Eigen::Matrix<double, -1, -1>&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<franka_msgs::msg::FrankaRobotState_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<franka_msgs::msg::FrankaRobotState_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = franka_msgs::msg::FrankaRobotState_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<franka_msgs::msg::FrankaRobotState_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.257890] (cartesian_impedance_control) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = franka_msgs::msg::FrankaRobotState_<std::allocator<void> >; CallbackT = std::_Bind<void (cartesian_impedance_control::CartesianImpedanceController::*(cartesian_impedance_control::CartesianImpedanceController*, std::_Placeholder<1>))(std::shared_ptr<franka_msgs::msg::FrankaRobotState_<std::allocator<void> > >, const Eigen::Matrix<double, -1, -1>&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<franka_msgs::msg::FrankaRobotState_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<franka_msgs::msg::FrankaRobotState_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp_lifecycle::LifecycleNode; NodeTopicsT = rclcpp_lifecycle::LifecycleNode; ROSMessageType = franka_msgs::msg::FrankaRobotState_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<franka_msgs::msg::FrankaRobotState_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.257970] (cartesian_impedance_control) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = franka_msgs::msg::FrankaRobotState_<std::allocator<void> >; CallbackT = std::_Bind<void (cartesian_impedance_control::CartesianImpedanceController::*(cartesian_impedance_control::CartesianImpedanceController*, std::_Placeholder<1>))(std::shared_ptr<franka_msgs::msg::FrankaRobotState_<std::allocator<void> > >, const Eigen::Matrix<double, -1, -1>&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<franka_msgs::msg::FrankaRobotState_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<franka_msgs::msg::FrankaRobotState_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp_lifecycle::LifecycleNode; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<franka_msgs::msg::FrankaRobotState_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.258058] (cartesian_impedance_control) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp_lifecycle/rclcpp_lifecycle/lifecycle_node_impl.hpp:76:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp_lifecycle::LifecycleNode::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = franka_msgs::msg::FrankaRobotState_<std::allocator<void> >; CallbackT = std::_Bind<void (cartesian_impedance_control::CartesianImpedanceController::*(cartesian_impedance_control::CartesianImpedanceController*, std::_Placeholder<1>))(std::shared_ptr<franka_msgs::msg::FrankaRobotState_<std::allocator<void> > >, const Eigen::Matrix<double, -1, -1>&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<franka_msgs::msg::FrankaRobotState_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<franka_msgs::msg::FrankaRobotState_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<franka_msgs::msg::FrankaRobotState_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.258137] (cartesian_impedance_control) StderrLine: {'line': b'\x1b[01m\x1b[K/home/simi/franka_ros2_ws/src/cartesian_impedance_control/src/cartesian_impedance_controller.cpp:217:98:\x1b[m\x1b[K   required from here\n'}
[8.258198] (cartesian_impedance_control) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:404:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::function<_Res(_ArgTypes ...)>::function(std::function<_Res(_ArgTypes ...)>&&) [with _Res = void; _ArgTypes = {std::shared_ptr<franka_msgs::msg::FrankaRobotState_<std::allocator<void> > >, const Eigen::Matrix<double, -1, -1, 0, -1, -1>&}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.258275] (cartesian_impedance_control) StderrLine: {'line': b'  404 |       \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K(function&& __x) noexcept\n'}
[8.258335] (cartesian_impedance_control) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[8.258396] (cartesian_impedance_control) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:404:27:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<void (cartesian_impedance_control::CartesianImpedanceController::*(cartesian_impedance_control::CartesianImpedanceController*, std::_Placeholder<1>))(std::shared_ptr<franka_msgs::msg::FrankaRobotState_<std::allocator<void> > >, const Eigen::Matrix<double, -1, -1>&)>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<franka_msgs::msg::FrankaRobotState_<std::allocator<void> > >, const Eigen::Matrix<double, -1, -1>&)>&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.258459] (cartesian_impedance_control) StderrLine: {'line': b'  404 |       function(\x1b[01;36m\x1b[Kfunction&& __x\x1b[m\x1b[K) noexcept\n'}
[8.258520] (cartesian_impedance_control) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[8.258583] (cartesian_impedance_control) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:386:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::function<_Res(_ArgTypes ...)>::function(const std::function<_Res(_ArgTypes ...)>&) [with _Res = void; _ArgTypes = {std::shared_ptr<franka_msgs::msg::FrankaRobotState_<std::allocator<void> > >, const Eigen::Matrix<double, -1, -1, 0, -1, -1>&}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.258670] (cartesian_impedance_control) StderrLine: {'line': b'  386 |       \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K(const function& __x)\n'}
[8.258732] (cartesian_impedance_control) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[8.258793] (cartesian_impedance_control) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:386:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<void (cartesian_impedance_control::CartesianImpedanceController::*(cartesian_impedance_control::CartesianImpedanceController*, std::_Placeholder<1>))(std::shared_ptr<franka_msgs::msg::FrankaRobotState_<std::allocator<void> > >, const Eigen::Matrix<double, -1, -1>&)>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst std::function<void(std::shared_ptr<franka_msgs::msg::FrankaRobotState_<std::allocator<void> > >, const Eigen::Matrix<double, -1, -1>&)>&\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.258857] (cartesian_impedance_control) StderrLine: {'line': b'  386 |       function(\x1b[01;36m\x1b[Kconst function& __x\x1b[m\x1b[K)\n'}
[8.258919] (cartesian_impedance_control) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[8.258980] (cartesian_impedance_control) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:375:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::function<_Res(_ArgTypes ...)>::function(std::nullptr_t) [with _Res = void; _ArgTypes = {std::shared_ptr<franka_msgs::msg::FrankaRobotState_<std::allocator<void> > >, const Eigen::Matrix<double, -1, -1, 0, -1, -1>&}; std::nullptr_t = std::nullptr_t]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.259043] (cartesian_impedance_control) StderrLine: {'line': b'  375 |       \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K(nullptr_t) noexcept\n'}
[8.259104] (cartesian_impedance_control) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[8.259165] (cartesian_impedance_control) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:375:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<void (cartesian_impedance_control::CartesianImpedanceController::*(cartesian_impedance_control::CartesianImpedanceController*, std::_Placeholder<1>))(std::shared_ptr<franka_msgs::msg::FrankaRobotState_<std::allocator<void> > >, const Eigen::Matrix<double, -1, -1>&)>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::nullptr_t\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.259229] (cartesian_impedance_control) StderrLine: {'line': b'  375 |       function(\x1b[01;36m\x1b[Knullptr_t\x1b[m\x1b[K) noexcept\n'}
[8.259290] (cartesian_impedance_control) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.259351] (cartesian_impedance_control) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:368:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::function<_Res(_ArgTypes ...)>::function() [with _Res = void; _ArgTypes = {std::shared_ptr<franka_msgs::msg::FrankaRobotState_<std::allocator<void> > >, const Eigen::Matrix<double, -1, -1, 0, -1, -1>&}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.259416] (cartesian_impedance_control) StderrLine: {'line': b'  368 |       \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K() noexcept\n'}
[8.259477] (cartesian_impedance_control) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[8.259539] (cartesian_impedance_control) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:368:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 0 arguments, 1 provided\n'}
[8.337655] (-) TimerEvent: {}
[8.438077] (-) TimerEvent: {}
[8.538505] (-) TimerEvent: {}
[8.638918] (-) TimerEvent: {}
[8.739341] (-) TimerEvent: {}
[8.840241] (-) TimerEvent: {}
[8.940694] (-) TimerEvent: {}
[9.041607] (-) TimerEvent: {}
[9.142018] (-) TimerEvent: {}
[9.242463] (-) TimerEvent: {}
[9.342868] (-) TimerEvent: {}
[9.443209] (-) TimerEvent: {}
[9.543614] (-) TimerEvent: {}
[9.644018] (-) TimerEvent: {}
[9.744403] (-) TimerEvent: {}
[9.844842] (-) TimerEvent: {}
[9.945297] (-) TimerEvent: {}
[10.045708] (-) TimerEvent: {}
[10.146145] (-) TimerEvent: {}
[10.246614] (-) TimerEvent: {}
[10.347254] (-) TimerEvent: {}
[10.447976] (-) TimerEvent: {}
[10.548635] (-) TimerEvent: {}
[10.649348] (-) TimerEvent: {}
[10.749761] (-) TimerEvent: {}
[10.850169] (-) TimerEvent: {}
[10.950597] (-) TimerEvent: {}
[11.051030] (-) TimerEvent: {}
[11.151694] (-) TimerEvent: {}
[11.252114] (-) TimerEvent: {}
[11.352524] (-) TimerEvent: {}
[11.452876] (-) TimerEvent: {}
[11.553512] (-) TimerEvent: {}
[11.653925] (-) TimerEvent: {}
[11.754333] (-) TimerEvent: {}
[11.854728] (-) TimerEvent: {}
[11.955369] (-) TimerEvent: {}
[12.055783] (-) TimerEvent: {}
[12.156229] (-) TimerEvent: {}
[12.256907] (-) TimerEvent: {}
[12.357554] (-) TimerEvent: {}
[12.457961] (-) TimerEvent: {}
[12.558370] (-) TimerEvent: {}
[12.658798] (-) TimerEvent: {}
[12.759555] (-) TimerEvent: {}
[12.860047] (-) TimerEvent: {}
[12.960512] (-) TimerEvent: {}
[13.060925] (-) TimerEvent: {}
[13.161738] (-) TimerEvent: {}
[13.262166] (-) TimerEvent: {}
[13.362540] (-) TimerEvent: {}
[13.462896] (-) TimerEvent: {}
[13.563369] (-) TimerEvent: {}
[13.663783] (-) TimerEvent: {}
[13.764200] (-) TimerEvent: {}
[13.864622] (-) TimerEvent: {}
[13.965378] (-) TimerEvent: {}
[14.065806] (-) TimerEvent: {}
[14.166242] (-) TimerEvent: {}
[14.267000] (-) TimerEvent: {}
[14.367418] (-) TimerEvent: {}
[14.467879] (-) TimerEvent: {}
[14.568530] (-) TimerEvent: {}
[14.668984] (-) TimerEvent: {}
[14.769556] (-) TimerEvent: {}
[14.869976] (-) TimerEvent: {}
[14.970392] (-) TimerEvent: {}
[15.070766] (-) TimerEvent: {}
[15.171106] (-) TimerEvent: {}
[15.271568] (-) TimerEvent: {}
[15.371933] (-) TimerEvent: {}
[15.472375] (-) TimerEvent: {}
[15.572841] (-) TimerEvent: {}
[15.673526] (-) TimerEvent: {}
[15.773988] (-) TimerEvent: {}
[15.874395] (-) TimerEvent: {}
[15.974799] (-) TimerEvent: {}
[16.075248] (-) TimerEvent: {}
[16.175704] (-) TimerEvent: {}
[16.276162] (-) TimerEvent: {}
[16.376619] (-) TimerEvent: {}
[16.477072] (-) TimerEvent: {}
[16.577702] (-) TimerEvent: {}
[16.678082] (-) TimerEvent: {}
[16.778520] (-) TimerEvent: {}
[16.878985] (-) TimerEvent: {}
[16.979445] (-) TimerEvent: {}
[17.079872] (-) TimerEvent: {}
[17.180341] (-) TimerEvent: {}
[17.280792] (-) TimerEvent: {}
[17.381250] (-) TimerEvent: {}
[17.481627] (-) TimerEvent: {}
[17.582052] (-) TimerEvent: {}
[17.682436] (-) TimerEvent: {}
[17.782888] (-) TimerEvent: {}
[17.883342] (-) TimerEvent: {}
[17.983790] (-) TimerEvent: {}
[18.084234] (-) TimerEvent: {}
[18.184677] (-) TimerEvent: {}
[18.285289] (-) TimerEvent: {}
[18.385712] (-) TimerEvent: {}
[18.486121] (-) TimerEvent: {}
[18.586525] (-) TimerEvent: {}
[18.686936] (-) TimerEvent: {}
[18.787391] (-) TimerEvent: {}
[18.888580] (-) TimerEvent: {}
[18.989036] (-) TimerEvent: {}
[19.089478] (-) TimerEvent: {}
[19.189892] (-) TimerEvent: {}
[19.290305] (-) TimerEvent: {}
[19.390762] (-) TimerEvent: {}
[19.491211] (-) TimerEvent: {}
[19.591667] (-) TimerEvent: {}
[19.692124] (-) TimerEvent: {}
[19.792585] (-) TimerEvent: {}
[19.893040] (-) TimerEvent: {}
[19.993534] (-) TimerEvent: {}
[20.093943] (-) TimerEvent: {}
[20.194411] (-) TimerEvent: {}
[20.294879] (-) TimerEvent: {}
[20.395351] (-) TimerEvent: {}
[20.495817] (-) TimerEvent: {}
[20.596556] (-) TimerEvent: {}
[20.697220] (-) TimerEvent: {}
[20.797627] (-) TimerEvent: {}
[20.896735] (cartesian_impedance_control) StderrLine: {'line': b'gmake[2]: *** [CMakeFiles/cartesian_impedance_control.dir/build.make:76: CMakeFiles/cartesian_impedance_control.dir/src/cartesian_impedance_controller.cpp.o] Error 1\n'}
[20.897423] (cartesian_impedance_control) StderrLine: {'line': b'gmake[1]: *** [CMakeFiles/Makefile2:141: CMakeFiles/cartesian_impedance_control.dir/all] Error 2\n'}
[20.897640] (-) TimerEvent: {}
[20.897999] (cartesian_impedance_control) StderrLine: {'line': b'gmake: *** [Makefile:146: all] Error 2\n'}
[20.900982] (cartesian_impedance_control) CommandEnded: {'returncode': 2}
[20.989046] (cartesian_impedance_control) JobEnded: {'identifier': 'cartesian_impedance_control', 'rc': 2}
[21.000658] (-) TimerEvent: {}
[21.000779] (-) EventReactorShutdown: {}
